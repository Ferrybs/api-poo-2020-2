plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
    id "org.jetbrains.kotlin.kapt" version "1.4.10"
    id 'application'
}

repositories {
    // (NUVEM)
    jcenter()
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/ktor' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }

    // (FISICO) - Pasta: /lib


}

sourceSets.main.java.srcDirs = ['src']

dependencies {
    // - Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // - Servidor ktor e gson
    implementation 'io.ktor:ktor-server-netty:1.4.0'
    implementation "io.ktor:ktor-gson:1.4.0"
    implementation "io.ktor:ktor-server-netty:1.4.0"
    implementation "io.ktor:ktor-html-builder:1.4.0"
    implementation "io.ktor:ktor-locations:1.4.0"
    implementation "io.ktor:ktor-auth-ldap:1.4.0"
    implementation "io.ktor:ktor-auth:1.4.0"
    implementation "io.ktor:ktor-auth-jwt:1.4.0"
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.0"

    implementation 'org.litote.kmongo:kmongo:4.1.2'
    implementation 'org.litote.kmongo:kmongo-coroutine:4.1.2'
    implementation 'org.litote.kmongo:kmongo-rxjava2:4.1.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-cbor:1.0.1'

    // https://mvnrepository.com/artifact/org.mindrot/jbcrypt
    compile group: 'org.mindrot', name: 'jbcrypt', version: '0.4'

    kapt 'org.litote.kmongo:kmongo-annotation-processor:4.1.2'
    compile 'org.mongodb:bson:4.1.1'

    testImplementation group: 'org.amshove.kluent', name: 'kluent', version: '1.38'
    testImplementation "io.ktor:ktor-server-test-host:1.4.0"

    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.13.1'

}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from(configurations.compile)
}
stage.dependsOn(copyToLib)

gradle.taskGraph.whenReady {
    taskGraph ->
        if (taskGraph.hasTask(stage)) {
            test.enabled = false
        }
}

apply plugin: 'kotlin-kapt'
apply plugin : "application"
group 'com.sfinancial'
version '1.0-SNAPSHOT'


mainClassName = "com.sfinancial.ApplicationKt"

